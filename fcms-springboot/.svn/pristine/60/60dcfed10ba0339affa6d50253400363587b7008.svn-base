env.custom.envType=DEV

### system url
env.custom.serverStatic=/fcms/assets
env.custom.serverDynamic=/fcms
env.custom.serverName=fcms

#appname
env.custom.appName=fcms
env.custom.appUrl=fcms
env.custom.fileSavePath=C:/fcmsFiles
env.custom.debug=true

env.custom.smsEnable=false

env.custom.easyuiVersion=
env.custom.easyuiTheme=

env.custom.homeUrl=assets/ueditor/
env.custom.urlPrefix=admin/information/info/fileCallBack?fileName=
env.custom.imagePathFormat=/information/images/{yyyy}{mm}{dd}/{time}{rand:6}
env.custom.videoPathFormat=/information/video/{yyyy}{mm}{dd}/{time}{rand:6}
env.custom.fileNotFound=C:/fcmsFiles/defaltImage/notFound.jpg
env.custom.noFile=C:/fcmsFiles/defaltImage/notFound.jpg
env.custom.noUserImg=C:/fcmsFiles/defaltImage/notFound.jpg

env.custom.requestLogEnabled=true
env.custom.requestLogNoException=true

env.custom.sensitiveWordUrl=C:/SensitiveWord.txt

# socket.io 配置
wss.server.port=9000
wss.server.host=192.168.0.134
wss.server.connect.host=192.168.0.134
# 自定义server.port，启动类MainApplication中设置到Tomcat容器
web.server.port=8080
app.server.port=8282
server.servlet.context-path=/fcms

server.ssl.enabled=false
server.ssl.key-store=keystore.p12
server.ssl.key-store-password=123456
server.ssl.keyStoreType=PKCS12
server.ssl.keyAlias:tomcat

spring.application.name=${env.custom.appName}
spring.boot.admin.client.url=http://${wss.server.connect.host}:7000/admin
spring.boot.admin.client.instance.serviceBaseUrl=http://${wss.server.connect.host}:${web.server.port}
spring.jackson.serialization.indent_output=true
endpoints.health.sensitive=false
management.endpoints.web.exposure.include=*

#logging.config=classpath:log4j2-dev.xml
#logging.level.root=info
 
### 安全设置
management.security.enabled=false
endpoints.enabled=true

spring.mvc.view.prefix=/WEB-INF/pages/
spring.mvc.view.suffix=.jsp

#关闭默认模板引擎
spring.thymeleaf.cache=false
spring.thymeleaf.enabled=false

spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true
spring.http.encoding.enabled=true

mybatis.mapper-locations=classpath:mybatis/*Mapper.xml
mybatis.type-aliases-package=com.yhlt.showcase
mybatis.config=classpath:mybatis/mybatis-config.xml
#test
mybatis.mapper-locations.Mpss=classpath:mybatisMpss/*Mapper.xml
mybatis.type-aliases-package.Mpss=com.yhlt.showcase
mybatis.config.Mpss=classpath:mybatisMpss/mybatis-config.xml

## log configuration
loggingRoot=.
loggingLevel=INFO

spring.datasource.name=druidDatasource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.0.201/fcms-test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.tomcat.max-active=100
spring.datasource.tomcat.max-idle=200
spring.datasource.tomcat.initialSize=20
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# open session in view Exception is could not initialize proxy - no Session
spring.jpa.open-in-view=true
spring.jmx.default-domain=jpa.sample


spring.datasource.mpss.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.mpss.url=jdbc:mysql://192.168.0.201/fcms-test?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false
spring.datasource.mpss.username=root
spring.datasource.mpss.password=root

#spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@172.16.1.181:1521:orcl
#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.username=fcms
#spring.datasource.password=fcms

#--------------------------
# 下面为连接池的补充设置，应用到上面所有数据源中
#  初始化大小，最小，最大
spring.datasource.initialSize=20
spring.datasource.minIdle=1
spring.datasource.maxActive=50
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=false
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j2
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=192.168.0.201
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=Password12!
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-active=10000
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=30000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=200
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=10
# 连接超时时间（毫秒）
spring.redis.timeout=300

spring.custom.redisTimeToLive=3600
# 区块链开关
block.chain.enabled=true
block.chain.ip=172.16.1.183
block.chain.port=4226
block.chain.login=yqemurpc
block.chain.password=nKmn7fKBeV9gcmD5gMYhEMG8dKBEXdsvwV46gngaygc
block.chain.address=15ufPo2Jq5Bniz9McoFqjxN2ntW5yJ6mDa

#电子邮件配置
spring.mail.host=smtp.qq.com
spring.mail.username=564286735@qq.com
spring.mail.password=ptquqmmilswsbdcb
mail.toMail.addr=457267110@qq.com
mail.fromMail.addr=564286735@qq.com
spring.mail.default-encoding=utf-8
spring.mail.properties.smtp.auth=true
spring.mail.properties.smtp.starttls.enable=true
spring.mail.properties.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=true
